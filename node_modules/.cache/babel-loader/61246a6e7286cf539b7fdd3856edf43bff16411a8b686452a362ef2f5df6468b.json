{"ast":null,"code":"// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { Link } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const Login = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = (data) => {\n//     console.log(\"Login Data:\", data);\n//     alert(\"Login Successful!\");\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div className=\"card p-4 shadow-lg\" style={{ width: \"350px\" }}>\n//         <h5 className=\"text-center mb-3\">Sign in to 3DICKS</h5>\n//         <form onSubmit={handleSubmit(onSubmit)}>\n//           {/* Username/Email Field */}\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Username or email address</label>\n//             <input\n//               type=\"text\"\n//               className={`form-control ${errors.username ? \"is-invalid\" : \"\"}`}\n//               {...register(\"username\", { required: \"Username is required\" })}\n//             />\n//             {errors.username && <div className=\"invalid-feedback\">{errors.username.message}</div>}\n//           </div>\n\n//           {/* Password Field */}\n//           <div className=\"mb-2 d-flex justify-content-between\">\n//             <label className=\"form-label\">Password</label>\n//             <Link to=\"/forgot-password\" className=\"text-primary small\">Forgot password?</Link>\n//           </div>\n//           <div className=\"mb-3\">\n//             <input\n//               type=\"password\"\n//               className={`form-control ${errors.password ? \"is-invalid\" : \"\"}`}\n//               {...register(\"password\", {\n//                 required: \"Password is required\",\n//                 minLength: { value: 6, message: \"Password must be at least 6 characters\" },\n//               })}\n//             />\n//             {errors.password && <div className=\"invalid-feedback\">{errors.password.message}</div>}\n//           </div>\n\n//           {/* Login Button */}\n//           <button type=\"submit\" className=\"btn btn-success w-100\">\n//             Sign in\n//           </button>\n//         </form>\n\n//         {/* Additional Links */}\n//         <div className=\"mt-3 text-center\">\n//           <Link to=\"/passkey-login\" className=\"text-primary d-block\">Sign in with a passkey</Link>\n//         </div>\n//         <div className=\"mt-3 p-3 bg-light rounded text-center border\">\n//           <span>New to 3DICKS? </span>\n//           <Link to=\"/signup\" className=\"text-primary\">Create an account</Link>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { Link } from \"react-router-dom\";\n// import { registerUser } from \"../api/auth\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./Signup.css\"; // Import custom CSS\n\n// const Signup = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await registerUser({\n//         email: data.email,\n//         username: data.username,\n//         password: data.password,\n//       });\n\n//       alert(\"Signup Successful! Redirecting...\");\n//       console.log(\"Registration Success:\", response);\n//       window.location.href = \"/home\";\n//     } catch (error) {\n//       alert(error.message || \"Signup failed. Please try again.\");\n//       console.error(\"Signup Error:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       {/* Left Section (Dark Background) */}\n//       <div className=\"left-section\">\n//         <h1>Create your free account</h1>\n//         <p>Explore GitHub’s core features for individuals and organizations.</p>\n//         <p>\n//           <Link to=\"#\">See what’s included ▼</Link>\n//         </p>\n//       </div>\n\n//       {/* Right Section (Signup Form) */}\n//       <div className=\"right-section\">\n//         <div className=\"form-wrapper\">\n//           <h3>Sign up to GitHub</h3>\n//           <form onSubmit={handleSubmit(onSubmit)}>\n//             {/* Email Field */}\n//             <div className=\"form-group\">\n//               <label>Email*</label>\n//               <input\n//                 type=\"email\"\n//                 className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\n//                 placeholder=\"Email\"\n//                 {...register(\"email\", { required: \"Email is required\" })}\n//               />\n//               {errors.email && (\n//                 <div className=\"invalid-feedback\">{errors.email.message}</div>\n//               )}\n//             </div>\n\n//             {/* Password Field */}\n//             <div className=\"form-group\">\n//               <label>Password*</label>\n//               <input\n//                 type=\"password\"\n//                 className={`form-control ${errors.password ? \"is-invalid\" : \"\"}`}\n//                 placeholder=\"Password\"\n//                 {...register(\"password\", {\n//                   required: \"Password is required\",\n//                   minLength: {\n//                     value: 8,\n//                     message: \"Password must be at least 8 characters\",\n//                   },\n//                 })}\n//               />\n//               {errors.password && (\n//                 <div className=\"invalid-feedback\">{errors.password.message}</div>\n//               )}\n//               <small className=\"form-text\">\n//                 Password should be at least 15 characters OR at least 8\n//                 characters including a number and a lowercase letter.\n//               </small>\n//             </div>\n\n//             {/* Username Field */}\n//             <div className=\"form-group\">\n//               <label>Username*</label>\n//               <input\n//                 type=\"text\"\n//                 className={`form-control ${errors.username ? \"is-invalid\" : \"\"}`}\n//                 placeholder=\"Username\"\n//                 {...register(\"username\", {\n//                   required: \"Username is required\",\n//                   pattern: {\n//                     value: /^[a-zA-Z0-9-]+$/,\n//                     message: \"Invalid username format\",\n//                   },\n//                 })}\n//               />\n//               {errors.username && (\n//                 <div className=\"invalid-feedback\">{errors.username.message}</div>\n//               )}\n//               <small className=\"form-text\">\n//                 Username may only contain alphanumeric characters or hyphens, and\n//                 cannot begin or end with a hyphen.\n//               </small>\n//             </div>\n\n//             {/* Continue Button */}\n//             <button type=\"submit\" className=\"btn btn-primary w-100\">\n//               Continue →\n//             </button>\n//           </form>\n\n//           {/* Terms & Privacy */}\n//           <p className=\"terms\">\n//             By creating an account, you agree to the{\" \"}\n//             <Link to=\"#\">Terms of Service</Link>. See the{\" \"}\n//             <Link to=\"#\">GitHub Privacy Statement</Link>.\n//           </p>\n\n//           {/* Already have an account */}\n//           <p className=\"login-link\">\n//             Already have an account? <Link to=\"/login\">Sign in →</Link>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Signup;","map":{"version":3,"names":[],"sources":["/home/tanmay-kumar/Desktop/clone/clone/src/pages/loginCheck.js"],"sourcesContent":["// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { Link } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const Login = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = (data) => {\n//     console.log(\"Login Data:\", data);\n//     alert(\"Login Successful!\");\n//   };\n\n//   return (\n//     <div className=\"d-flex justify-content-center align-items-center vh-100\">\n//       <div className=\"card p-4 shadow-lg\" style={{ width: \"350px\" }}>\n//         <h5 className=\"text-center mb-3\">Sign in to 3DICKS</h5>\n//         <form onSubmit={handleSubmit(onSubmit)}>\n//           {/* Username/Email Field */}\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Username or email address</label>\n//             <input\n//               type=\"text\"\n//               className={`form-control ${errors.username ? \"is-invalid\" : \"\"}`}\n//               {...register(\"username\", { required: \"Username is required\" })}\n//             />\n//             {errors.username && <div className=\"invalid-feedback\">{errors.username.message}</div>}\n//           </div>\n\n//           {/* Password Field */}\n//           <div className=\"mb-2 d-flex justify-content-between\">\n//             <label className=\"form-label\">Password</label>\n//             <Link to=\"/forgot-password\" className=\"text-primary small\">Forgot password?</Link>\n//           </div>\n//           <div className=\"mb-3\">\n//             <input\n//               type=\"password\"\n//               className={`form-control ${errors.password ? \"is-invalid\" : \"\"}`}\n//               {...register(\"password\", {\n//                 required: \"Password is required\",\n//                 minLength: { value: 6, message: \"Password must be at least 6 characters\" },\n//               })}\n//             />\n//             {errors.password && <div className=\"invalid-feedback\">{errors.password.message}</div>}\n//           </div>\n\n//           {/* Login Button */}\n//           <button type=\"submit\" className=\"btn btn-success w-100\">\n//             Sign in\n//           </button>\n//         </form>\n\n//         {/* Additional Links */}\n//         <div className=\"mt-3 text-center\">\n//           <Link to=\"/passkey-login\" className=\"text-primary d-block\">Sign in with a passkey</Link>\n//         </div>\n//         <div className=\"mt-3 p-3 bg-light rounded text-center border\">\n//           <span>New to 3DICKS? </span>\n//           <Link to=\"/signup\" className=\"text-primary\">Create an account</Link>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n\n\n\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { Link } from \"react-router-dom\";\n// import { registerUser } from \"../api/auth\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./Signup.css\"; // Import custom CSS\n\n// const Signup = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await registerUser({\n//         email: data.email,\n//         username: data.username,\n//         password: data.password,\n//       });\n\n//       alert(\"Signup Successful! Redirecting...\");\n//       console.log(\"Registration Success:\", response);\n//       window.location.href = \"/home\";\n//     } catch (error) {\n//       alert(error.message || \"Signup failed. Please try again.\");\n//       console.error(\"Signup Error:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       {/* Left Section (Dark Background) */}\n//       <div className=\"left-section\">\n//         <h1>Create your free account</h1>\n//         <p>Explore GitHub’s core features for individuals and organizations.</p>\n//         <p>\n//           <Link to=\"#\">See what’s included ▼</Link>\n//         </p>\n//       </div>\n\n//       {/* Right Section (Signup Form) */}\n//       <div className=\"right-section\">\n//         <div className=\"form-wrapper\">\n//           <h3>Sign up to GitHub</h3>\n//           <form onSubmit={handleSubmit(onSubmit)}>\n//             {/* Email Field */}\n//             <div className=\"form-group\">\n//               <label>Email*</label>\n//               <input\n//                 type=\"email\"\n//                 className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\n//                 placeholder=\"Email\"\n//                 {...register(\"email\", { required: \"Email is required\" })}\n//               />\n//               {errors.email && (\n//                 <div className=\"invalid-feedback\">{errors.email.message}</div>\n//               )}\n//             </div>\n\n//             {/* Password Field */}\n//             <div className=\"form-group\">\n//               <label>Password*</label>\n//               <input\n//                 type=\"password\"\n//                 className={`form-control ${errors.password ? \"is-invalid\" : \"\"}`}\n//                 placeholder=\"Password\"\n//                 {...register(\"password\", {\n//                   required: \"Password is required\",\n//                   minLength: {\n//                     value: 8,\n//                     message: \"Password must be at least 8 characters\",\n//                   },\n//                 })}\n//               />\n//               {errors.password && (\n//                 <div className=\"invalid-feedback\">{errors.password.message}</div>\n//               )}\n//               <small className=\"form-text\">\n//                 Password should be at least 15 characters OR at least 8\n//                 characters including a number and a lowercase letter.\n//               </small>\n//             </div>\n\n//             {/* Username Field */}\n//             <div className=\"form-group\">\n//               <label>Username*</label>\n//               <input\n//                 type=\"text\"\n//                 className={`form-control ${errors.username ? \"is-invalid\" : \"\"}`}\n//                 placeholder=\"Username\"\n//                 {...register(\"username\", {\n//                   required: \"Username is required\",\n//                   pattern: {\n//                     value: /^[a-zA-Z0-9-]+$/,\n//                     message: \"Invalid username format\",\n//                   },\n//                 })}\n//               />\n//               {errors.username && (\n//                 <div className=\"invalid-feedback\">{errors.username.message}</div>\n//               )}\n//               <small className=\"form-text\">\n//                 Username may only contain alphanumeric characters or hyphens, and\n//                 cannot begin or end with a hyphen.\n//               </small>\n//             </div>\n\n//             {/* Continue Button */}\n//             <button type=\"submit\" className=\"btn btn-primary w-100\">\n//               Continue →\n//             </button>\n//           </form>\n\n//           {/* Terms & Privacy */}\n//           <p className=\"terms\">\n//             By creating an account, you agree to the{\" \"}\n//             <Link to=\"#\">Terms of Service</Link>. See the{\" \"}\n//             <Link to=\"#\">GitHub Privacy Statement</Link>.\n//           </p>\n\n//           {/* Already have an account */}\n//           <p className=\"login-link\">\n//             Already have an account? <Link to=\"/login\">Sign in →</Link>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Signup;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}