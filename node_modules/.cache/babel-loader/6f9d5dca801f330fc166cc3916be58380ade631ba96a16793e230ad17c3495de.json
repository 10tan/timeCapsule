{"ast":null,"code":"// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import axios from \"axios\";\n// import Navbar from './Navbar';\n// import \"./FileUploader.css\"; // Import CSS file for animation\n\n// export default function FileUploader() {\n//   const [files, setFiles] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [formData, setFormData] = useState({ title: \"\", description: \"\" });\n//   const [previews, setPreviews] = useState([]);\n//   const [glow, setGlow] = useState(false);\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     if (!selectedFiles.length) return;\n\n//     setFiles(selectedFiles);\n\n//     // Generate preview URLs for images\n//     const filePreviews = selectedFiles.map(file => URL.createObjectURL(file));\n//     setPreviews(filePreviews);\n//   };\n\n//   const handleUpload = async () => {\n//     if (!files.length) {\n//       setGlow(true);\n//       setTimeout(() => setGlow(false), 1000); // Remove glow after animation duration\n//       return;\n//     }\n\n//     for (const file of files) {\n//       const formData = new FormData();\n//       formData.append(\"image\", file);\n\n//       try {\n//         await axios.post(\"http://localhost:5000/api/img\", formData, {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//             Authorization: `Bearer ${\n//               typeof window !== \"undefined\" && localStorage.getItem(\"token\")\n//             }`,\n//           },\n//         });\n//       } catch (error) {\n//         console.error(\"Upload failed:\", error);\n//       }\n//     }\n//     setShowForm(true);\n//   };\n\n//   const handleFormChange = (event) => {\n//     const { name, value } = event.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     console.log(\"Form Submitted\", formData);\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className=\"container mt-5\">\n//         <div className=\"card p-4 shadow-lg\">\n//           <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n//           <input\n//             type=\"file\"\n//             className={`form-control mb-3 ${glow ? \"glow\" : \"\"}`}\n//             accept=\"image/*, video/*\"\n//             multiple\n//             onChange={handleFileChange}\n//           />\n//           <div className=\"preview-container d-flex flex-wrap\">\n//             {previews.map((src, index) => (\n//               <img key={index} src={src} alt=\"Preview\" className=\"m-2\" style={{ width: 100, height: 100, objectFit: \"cover\" }} />\n//             ))}\n//           </div>\n//           <button className=\"btn btn-primary mt-3\" onClick={handleUpload}>\n//             Upload Files\n//           </button>\n//         </div>\n\n//         {showForm && (\n//           <div className=\"card p-4 shadow-lg mt-4\">\n//             <h3 className=\"text-center\">Enter Details</h3>\n//             <form onSubmit={handleFormSubmit}>\n//               <div className=\"mb-3\">\n//                 <label className=\"form-label\">Title</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   name=\"title\"\n//                   value={formData.title}\n//                   onChange={handleFormChange}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label className=\"form-label\">Description</label>\n//                 <textarea\n//                   className=\"form-control\"\n//                   name=\"description\"\n//                   value={formData.description}\n//                   onChange={handleFormChange}\n//                   required\n//                 />\n//               </div>\n//               <button type=\"submit\" className=\"btn btn-success\">\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/home/tanmay-kumar/Desktop/clone-2/timeCapsule/src/Dashboard/Profile.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import axios from \"axios\";\n// import Navbar from './Navbar';\n// import \"./FileUploader.css\"; // Import CSS file for animation\n\n// export default function FileUploader() {\n//   const [files, setFiles] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [formData, setFormData] = useState({ title: \"\", description: \"\" });\n//   const [previews, setPreviews] = useState([]);\n//   const [glow, setGlow] = useState(false);\n\n//   const handleFileChange = (event) => {\n//     const selectedFiles = Array.from(event.target.files);\n//     if (!selectedFiles.length) return;\n    \n//     setFiles(selectedFiles);\n    \n//     // Generate preview URLs for images\n//     const filePreviews = selectedFiles.map(file => URL.createObjectURL(file));\n//     setPreviews(filePreviews);\n//   };\n\n//   const handleUpload = async () => {\n//     if (!files.length) {\n//       setGlow(true);\n//       setTimeout(() => setGlow(false), 1000); // Remove glow after animation duration\n//       return;\n//     }\n\n//     for (const file of files) {\n//       const formData = new FormData();\n//       formData.append(\"image\", file);\n\n//       try {\n//         await axios.post(\"http://localhost:5000/api/img\", formData, {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//             Authorization: `Bearer ${\n//               typeof window !== \"undefined\" && localStorage.getItem(\"token\")\n//             }`,\n//           },\n//         });\n//       } catch (error) {\n//         console.error(\"Upload failed:\", error);\n//       }\n//     }\n//     setShowForm(true);\n//   };\n\n//   const handleFormChange = (event) => {\n//     const { name, value } = event.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     console.log(\"Form Submitted\", formData);\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className=\"container mt-5\">\n//         <div className=\"card p-4 shadow-lg\">\n//           <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n//           <input\n//             type=\"file\"\n//             className={`form-control mb-3 ${glow ? \"glow\" : \"\"}`}\n//             accept=\"image/*, video/*\"\n//             multiple\n//             onChange={handleFileChange}\n//           />\n//           <div className=\"preview-container d-flex flex-wrap\">\n//             {previews.map((src, index) => (\n//               <img key={index} src={src} alt=\"Preview\" className=\"m-2\" style={{ width: 100, height: 100, objectFit: \"cover\" }} />\n//             ))}\n//           </div>\n//           <button className=\"btn btn-primary mt-3\" onClick={handleUpload}>\n//             Upload Files\n//           </button>\n//         </div>\n        \n//         {showForm && (\n//           <div className=\"card p-4 shadow-lg mt-4\">\n//             <h3 className=\"text-center\">Enter Details</h3>\n//             <form onSubmit={handleFormSubmit}>\n//               <div className=\"mb-3\">\n//                 <label className=\"form-label\">Title</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   name=\"title\"\n//                   value={formData.title}\n//                   onChange={handleFormChange}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label className=\"form-label\">Description</label>\n//                 <textarea\n//                   className=\"form-control\"\n//                   name=\"description\"\n//                   value={formData.description}\n//                   onChange={handleFormChange}\n//                   required\n//                 />\n//               </div>\n//               <button type=\"submit\" className=\"btn btn-success\">\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}