{"ast":null,"code":"var _jsxFileName = \"/home/tanmay-kumar/Desktop/clone/clone/src/internal/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Import useState\nimport { Container, Row, Col, Card, ListGroup, Button, Form } from 'react-bootstrap';\nimport { FaCodeBranch, FaStar, FaEye, FaExclamationCircle } from 'react-icons/fa';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null); // State for selected file\n\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (selectedFile) {\n      // Logic to upload the file (e.g., to a server)\n      console.log('Uploading:', selectedFile);\n      // You'll need to implement the actual upload logic here\n    } else {\n      console.log('No file selected.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Upload Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Choose Photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"file\",\n                  onChange: handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleUpload,\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Card","ListGroup","Button","Form","FaCodeBranch","FaStar","FaEye","FaExclamationCircle","jsxDEV","_jsxDEV","Dashboard","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","console","log","fluid","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Group","Label","Control","type","onChange","variant","onClick","_c","$RefreshReg$"],"sources":["/home/tanmay-kumar/Desktop/clone/clone/src/internal/Dashboard.jsx"],"sourcesContent":["import React, { useState } from 'react'; // Import useState\nimport { Container, Row, Col, Card, ListGroup, Button, Form } from 'react-bootstrap';\nimport { FaCodeBranch, FaStar, FaEye, FaExclamationCircle } from 'react-icons/fa';\nimport './Dashboard.css';\n\nfunction Dashboard() {\n  const [selectedFile, setSelectedFile] = useState(null); // State for selected file\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      // Logic to upload the file (e.g., to a server)\n      console.log('Uploading:', selectedFile);\n      // You'll need to implement the actual upload logic here\n    } else {\n      console.log('No file selected.');\n    }\n  };\n\n  return (\n    <Container fluid className=\"dashboard-container\">\n      {/* ... (rest of your dashboard content) ... */}\n\n      <Row className=\"mt-4\">\n        <Col>\n          <Card>\n            <Card.Body>\n              <Card.Title>Upload Photo</Card.Title>\n              <Form>\n                <Form.Group>\n                  <Form.Label>Choose Photo</Form.Label>\n                  <Form.Control type=\"file\" onChange={handleFileChange} />\n                </Form.Group>\n                <Button variant=\"primary\" onClick={handleUpload}>Upload</Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* ... (rest of your dashboard content) ... */}\n    </Container>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}