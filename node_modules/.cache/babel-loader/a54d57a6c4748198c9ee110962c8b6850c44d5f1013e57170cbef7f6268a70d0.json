{"ast":null,"code":"var _jsxFileName = \"/home/tanmay-kumar/Desktop/clone-2/timeCapsule/src/Dashboard/FileUploader.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import axios from \"axios\";\n// import Navbar from './Navbar';\n// import CountdownTimer from './Timer';\n// export default function FileUploader() {\n//     const [files, setFiles] = useState([]);\n//     const [time, setTime] = useState(0); // Initialize time state\n\n//     const handleFileChange = (event) => {\n//         const selectedFiles = Array.from(event.target.files);\n//         if (!selectedFiles.length) return;\n//         setFiles(selectedFiles);\n//     };\n\n//     const handleTimeChange = (event) => {\n//         setTime(parseInt(event.target.value, 10) || 0); // Parse time input\n//     };\n\n//     const handleUpload = async () => {\n//         if (!files.length) return;\n\n//         for (const file of files) {\n//             const formData = new FormData();\n//             formData.append(\"image\", file);\n//             formData.append(\"time\", time); // Append time to form data\n\n//             try {\n//                 const response = await axios.post(\n//                     \"http://localhost:5000/api/img\",\n//                     formData,\n//                     {\n//                         headers: {\n//                             \"Content-Type\": \"multipart/form-data\",\n//                             Authorization: `Bearer ${\n//                                 typeof window !== \"undefined\" && localStorage.getItem(\"token\")\n//                             }`,\n//                         },\n//                     }\n//                 );\n\n//                 console.log(\"Upload successful:\", response.data);\n//             } catch (error) {\n//                 if (error.response) {\n//                     console.error(\"Upload failed:\", error.response.data.message);\n//                 } else if (error.request) {\n//                     console.error(\"Network error:\", error.request);\n//                 } else {\n//                     console.error(\"Error uploading file:\", error.message);\n//                 }\n//             }\n//         }\n//         setFiles([]);\n//         document.querySelector(\"input[type=file]\").value = \"\";\n//         setTime(0); // Reset time input\n//     };\n\n//     return (\n//         <div>\n//             <Navbar />\n//             <div className=\"container mt-5\">\n//                 <div className=\"card p-4 shadow-lg\">\n//                     <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n//                     <input\n//                         type=\"file\"\n//                         className=\"form-control mb-3\"\n//                         accept=\"image/*, video/*\"\n//                         multiple\n//                         onChange={handleFileChange}\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         className=\"form-control mb-3\"\n//                         placeholder=\"Time (seconds)\"\n//                         value={time}\n//                         onChange={handleTimeChange}\n//                     />\n//                     <button className=\"btn btn-primary\" onClick={handleUpload}>\n//                         Upload Files\n//                     </button>\n//                     <CountdownTimer initialTime={time} />\n//                     <div className=\"row mt-3\">\n//                         {files.map((file, index) => (\n//                             <div key={index} className=\"col-md-4 mb-3\">\n//                                 {file.type.startsWith(\"image\") ? (\n//                                     <img\n//                                         src={URL.createObjectURL(file)}\n//                                         className=\"img-fluid rounded shadow-sm\"\n//                                         alt=\"uploaded\"\n//                                     />\n//                                 ) : (\n//                                     <video controls className=\"img-fluid rounded shadow-sm\">\n//                                         <source src={URL.createObjectURL(file)} type={file.type} />\n//                                     </video>\n//                                 )}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUploader() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [time, setTime] = useState(0);\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    if (!selectedFiles.length) return;\n    setFiles(selectedFiles);\n  };\n  const handleTimeChange = event => {\n    setTime(parseInt(event.target.value, 10) || 0);\n  };\n  const handleUpload = async event => {\n    event.preventDefault(); // Prevent unintended form submission\n\n    if (!files.length) return;\n    for (const file of files) {\n      const formData = new FormData();\n      formData.append(\"image\", file);\n      formData.append(\"time\", time);\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/img\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `Bearer ${typeof window !== \"undefined\" && localStorage.getItem(\"token\")}`\n          }\n        });\n        console.log(\"Upload successful:\", response.data);\n      } catch (error) {\n        if (error.response) {\n          console.error(\"Upload failed:\", error.response.data.message);\n        } else if (error.request) {\n          console.error(\"Network error:\", error.request);\n        } else {\n          console.error(\"Error uploading file:\", error.message);\n        }\n      }\n    }\n    setFiles([]);\n    document.querySelector(\"input[type=file]\").value = \"\";\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-4 shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Upload Images & Videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control mb-3\",\n          accept: \"image/*, video/*\",\n          multiple: true,\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control mb-3\",\n          placeholder: \"Time (seconds)\",\n          value: time,\n          onChange: handleTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleUpload,\n          children: \"Upload Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-3\",\n          children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 mb-3\",\n            children: file.type.startsWith(\"image\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(file),\n              className: \"img-fluid rounded shadow-sm\",\n              alt: \"uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n              controls: true,\n              className: \"img-fluid rounded shadow-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: URL.createObjectURL(file),\n                type: file.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUploader, \"1/Fnf0c5cIx8yWOSB6sqgfTMkVU=\");\n_c = FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUploader","_s","files","setFiles","time","setTime","handleFileChange","event","selectedFiles","Array","from","target","length","handleTimeChange","parseInt","value","handleUpload","preventDefault","file","formData","FormData","append","response","post","headers","Authorization","window","localStorage","getItem","console","log","data","error","message","request","document","querySelector","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","placeholder","onClick","map","index","startsWith","src","URL","createObjectURL","alt","controls","_c","$RefreshReg$"],"sources":["/home/tanmay-kumar/Desktop/clone-2/timeCapsule/src/Dashboard/FileUploader.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import axios from \"axios\";\n// import Navbar from './Navbar';\n// import CountdownTimer from './Timer';\n// export default function FileUploader() {\n//     const [files, setFiles] = useState([]);\n//     const [time, setTime] = useState(0); // Initialize time state\n\n//     const handleFileChange = (event) => {\n//         const selectedFiles = Array.from(event.target.files);\n//         if (!selectedFiles.length) return;\n//         setFiles(selectedFiles);\n//     };\n\n//     const handleTimeChange = (event) => {\n//         setTime(parseInt(event.target.value, 10) || 0); // Parse time input\n//     };\n\n//     const handleUpload = async () => {\n//         if (!files.length) return;\n\n//         for (const file of files) {\n//             const formData = new FormData();\n//             formData.append(\"image\", file);\n//             formData.append(\"time\", time); // Append time to form data\n\n//             try {\n//                 const response = await axios.post(\n//                     \"http://localhost:5000/api/img\",\n//                     formData,\n//                     {\n//                         headers: {\n//                             \"Content-Type\": \"multipart/form-data\",\n//                             Authorization: `Bearer ${\n//                                 typeof window !== \"undefined\" && localStorage.getItem(\"token\")\n//                             }`,\n//                         },\n//                     }\n//                 );\n\n//                 console.log(\"Upload successful:\", response.data);\n//             } catch (error) {\n//                 if (error.response) {\n//                     console.error(\"Upload failed:\", error.response.data.message);\n//                 } else if (error.request) {\n//                     console.error(\"Network error:\", error.request);\n//                 } else {\n//                     console.error(\"Error uploading file:\", error.message);\n//                 }\n//             }\n//         }\n//         setFiles([]);\n//         document.querySelector(\"input[type=file]\").value = \"\";\n//         setTime(0); // Reset time input\n//     };\n\n//     return (\n//         <div>\n//             <Navbar />\n//             <div className=\"container mt-5\">\n//                 <div className=\"card p-4 shadow-lg\">\n//                     <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n//                     <input\n//                         type=\"file\"\n//                         className=\"form-control mb-3\"\n//                         accept=\"image/*, video/*\"\n//                         multiple\n//                         onChange={handleFileChange}\n//                     />\n//                     <input\n//                         type=\"number\"\n//                         className=\"form-control mb-3\"\n//                         placeholder=\"Time (seconds)\"\n//                         value={time}\n//                         onChange={handleTimeChange}\n//                     />\n//                     <button className=\"btn btn-primary\" onClick={handleUpload}>\n//                         Upload Files\n//                     </button>\n//                     <CountdownTimer initialTime={time} />\n//                     <div className=\"row mt-3\">\n//                         {files.map((file, index) => (\n//                             <div key={index} className=\"col-md-4 mb-3\">\n//                                 {file.type.startsWith(\"image\") ? (\n//                                     <img\n//                                         src={URL.createObjectURL(file)}\n//                                         className=\"img-fluid rounded shadow-sm\"\n//                                         alt=\"uploaded\"\n//                                     />\n//                                 ) : (\n//                                     <video controls className=\"img-fluid rounded shadow-sm\">\n//                                         <source src={URL.createObjectURL(file)} type={file.type} />\n//                                     </video>\n//                                 )}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n\n\n\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nexport default function FileUploader() {\n    const [files, setFiles] = useState([]);\n    const [time, setTime] = useState(0);\n\n    const handleFileChange = (event) => {\n        const selectedFiles = Array.from(event.target.files);\n        if (!selectedFiles.length) return;\n        setFiles(selectedFiles);\n    };\n\n    const handleTimeChange = (event) => {\n        setTime(parseInt(event.target.value, 10) || 0);\n    };\n\n    const handleUpload = async (event) => {\n        event.preventDefault(); // Prevent unintended form submission\n\n        if (!files.length) return;\n\n        for (const file of files) {\n            const formData = new FormData();\n            formData.append(\"image\", file);\n            formData.append(\"time\", time);\n\n            try {\n                const response = await axios.post(\n                    \"http://localhost:5000/api/img\",\n                    formData,\n                    {\n                        headers: {\n                            \"Content-Type\": \"multipart/form-data\",\n                            Authorization: `Bearer ${\n                                typeof window !== \"undefined\" && localStorage.getItem(\"token\")\n                            }`,\n                        },\n                    }\n                );\n\n                console.log(\"Upload successful:\", response.data);\n            } catch (error) {\n                if (error.response) {\n                    console.error(\"Upload failed:\", error.response.data.message);\n                } else if (error.request) {\n                    console.error(\"Network error:\", error.request);\n                } else {\n                    console.error(\"Error uploading file:\", error.message);\n                }\n            }\n        }\n\n        setFiles([]);\n        document.querySelector(\"input[type=file]\").value = \"\";\n        setTime(0);\n    };\n\n    return (\n        <div>\n            {/* <Navbar /> Temporarily removed for debugging */}\n            <div className=\"container mt-5\">\n                <div className=\"card p-4 shadow-lg\">\n                    <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n                    <input\n                        type=\"file\"\n                        className=\"form-control mb-3\"\n                        accept=\"image/*, video/*\"\n                        multiple\n                        onChange={handleFileChange}\n                    />\n                    <input\n                        type=\"number\"\n                        className=\"form-control mb-3\"\n                        placeholder=\"Time (seconds)\"\n                        value={time}\n                        onChange={handleTimeChange}\n                    />\n                    <button className=\"btn btn-primary\" onClick={handleUpload}>\n                        Upload Files\n                    </button>\n                    {/* <CountdownTimer initialTime={time} /> Temporarily removed for debugging */}\n                    <div className=\"row mt-3\">\n                        {files.map((file, index) => (\n                            <div key={index} className=\"col-md-4 mb-3\">\n                                {file.type.startsWith(\"image\") ? (\n                                    <img\n                                        src={URL.createObjectURL(file)}\n                                        className=\"img-fluid rounded shadow-sm\"\n                                        alt=\"uploaded\"\n                                    />\n                                ) : (\n                                    <video controls className=\"img-fluid rounded shadow-sm\">\n                                        <source src={URL.createObjectURL(file)} type={file.type} />\n                                    </video>\n                                )}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}