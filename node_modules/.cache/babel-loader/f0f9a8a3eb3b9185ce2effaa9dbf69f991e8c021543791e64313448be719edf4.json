{"ast":null,"code":"// token-utils.js\nimport { jwtDecode } from 'jwt-decode';\nexport function isTokenExpired() {\n  const token = localStorage.getItem('token');\n  if (!token) return true; // No token, consider it expired\n\n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000; // Convert to seconds\n    return decoded.exp < currentTime;\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return true; // Assume expired on error\n  }\n}","map":{"version":3,"names":["jwtDecode","isTokenExpired","token","localStorage","getItem","decoded","currentTime","Date","now","exp","error","console"],"sources":["/home/tanmay-kumar/Desktop/clone-2/TimeCapsule2.0/timeCapsule/src/api/token-utils.js"],"sourcesContent":["// token-utils.js\nimport {jwtDecode} from 'jwt-decode';\n\nexport function isTokenExpired() {\n    const token = localStorage.getItem('token');\n    if (!token) return true; // No token, consider it expired\n\n    try {\n        const decoded = jwtDecode(token);\n        const currentTime = Date.now() / 1000; // Convert to seconds\n        return decoded.exp < currentTime;\n    } catch (error) {\n        console.error('Error decoding token:', error);\n        return true; // Assume expired on error\n    }\n}"],"mappings":"AAAA;AACA,SAAQA,SAAS,QAAO,YAAY;AAEpC,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,IAAI,CAAC,CAAC;;EAEzB,IAAI;IACA,MAAMG,OAAO,GAAGL,SAAS,CAACE,KAAK,CAAC;IAChC,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvC,OAAOH,OAAO,CAACI,GAAG,GAAGH,WAAW;EACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}