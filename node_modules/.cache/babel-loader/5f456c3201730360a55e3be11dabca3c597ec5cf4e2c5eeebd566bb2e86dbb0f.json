{"ast":null,"code":"var _jsxFileName = \"/home/tanmay-kumar/Desktop/clone-2/timeCapsule/src/Dashboard/Timer.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import \"./CountdownTimer.css\";\n// import axios from \"axios\"\n// import { useNavigate } from \"react-router-dom\";\n// export default function CountdownTimer({initialTime, isDarkMode }) {\n//   const [time, setTime] = useState(0);\n//   const [isRunning, setIsRunning] = useState(true);\n//   //const [inputTime, setInputTime] = useState(\"\");\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     let interval;\n//     if (isRunning && time > 0) {\n//       interval = setInterval(() => {\n//         setTime((prevTime) => prevTime - 1);\n//       }, 1000);\n//     } else {\n//       clearInterval(interval);\n//       if (isRunning && time === 0) {\n//         // Timer reached zero, send email\n//         const sendEmail = async () => {\n//           try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.post(\n//               \"http://localhost:5000/api/email/send-email\",\n//               {},\n//               {\n//                 headers: {\n//                   Authorization: `Bearer ${token}`,\n//                 },\n//               }\n//             );\n//             console.log(\"Email sent successfully!\");\n//           } catch (error) {\n//             console.error(\"Error sending email:\", error);\n//             if(error.response && error.response.data && error.response.data.error){\n//                 console.error(\"Server error message:\", error.response.data.error);\n//             }\n//           }\n//         };\n//         sendEmail();\n//         setIsRunning(false);\n//         navigate(\"/user-photos\"); // Stop the timer\n//       }\n//     }\n//     return () => clearInterval(interval);\n//   }, [isRunning, time,navigate]);\n//   useEffect(() => {\n//     if (initialTime > 0) { // Only reset if initialTime is greater than 0\n//         setTime(initialTime);\n//         setIsRunning(true);\n//     }\n// }, [initialTime]);\n\n//   const formatTime = (seconds) => {\n//     const years = Math.floor(seconds / 31536000);\n//     const months = Math.floor((seconds % 31536000) / 2592000);\n//     const days = Math.floor((seconds % 2592000) / 86400);\n//     const hours = Math.floor((seconds % 86400) / 3600);\n//     const minutes = Math.floor((seconds % 3600) / 60);\n//     const remainingSeconds = seconds % 60;\n\n//     if (years > 0) return `${years}y ${months}m`;\n//     if (months > 0) return `${months}m ${days}d`;\n//     if (days > 0) return `${days}d ${hours}h`;\n//     if (hours > 0) return `${hours}h ${minutes}m`;\n//     return `${minutes}m ${remainingSeconds}s`;\n//   };\n\n//   /*const handleStart = () => {\n//     const seconds = parseInt(inputTime, 10);\n//     if (!isNaN(seconds) && seconds > 0) {\n//       setTime(seconds);\n//       setIsRunning(true);\n//     }\n//   };*/\n\n//   return (\n//     <div className={isDarkMode ? \"dark-mode\" : \"light-mode\"}>\n//         <div className=\"timer\">{formatTime(time)}</div>\n//         <div className=\"button-container\">\n//             <button onClick={() => setIsRunning(false)} className=\"button\">\n//                 Stop\n//             </button>\n//             <button\n//                 onClick={() => {\n//                     setTime(initialTime); // Reset to initialTime\n//                     setIsRunning(true);\n//                 }}\n//                 className=\"button\"\n//             >\n//                 Reset\n//             </button>\n//         </div>\n//     </div>\n// );\n// }\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./CountdownTimer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountdownTimer() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const initialTime = parseInt(queryParams.get(\"time\"), 10) || 0; // Read time from URL\n\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(true);\n  useEffect(() => {\n    let interval;\n    if (isRunning && time > 0) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n      if (isRunning && time === 0) {\n        sendEmail();\n        setIsRunning(false);\n        navigate(\"/user-photos\"); // Redirect when timer ends\n      }\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, time, navigate]);\n  const sendEmail = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5000/api/email/send-email\", {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Email sent successfully!\");\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [time, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(false),\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setTime(initialTime);\n        setIsRunning(true);\n      },\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n_s(CountdownTimer, \"ARWDUWPZyuXG6Y38SMhyIZdqw+g=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","CountdownTimer","_s","navigate","location","queryParams","URLSearchParams","search","initialTime","parseInt","get","time","setTime","isRunning","setIsRunning","interval","setInterval","prevTime","clearInterval","sendEmail","token","localStorage","getItem","post","headers","Authorization","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/tanmay-kumar/Desktop/clone-2/timeCapsule/src/Dashboard/Timer.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n// import \"./CountdownTimer.css\";\n// import axios from \"axios\"\n// import { useNavigate } from \"react-router-dom\";\n// export default function CountdownTimer({initialTime, isDarkMode }) {\n//   const [time, setTime] = useState(0);\n//   const [isRunning, setIsRunning] = useState(true);\n//   //const [inputTime, setInputTime] = useState(\"\");\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     let interval;\n//     if (isRunning && time > 0) {\n//       interval = setInterval(() => {\n//         setTime((prevTime) => prevTime - 1);\n//       }, 1000);\n//     } else {\n//       clearInterval(interval);\n//       if (isRunning && time === 0) {\n//         // Timer reached zero, send email\n//         const sendEmail = async () => {\n//           try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.post(\n//               \"http://localhost:5000/api/email/send-email\",\n//               {},\n//               {\n//                 headers: {\n//                   Authorization: `Bearer ${token}`,\n//                 },\n//               }\n//             );\n//             console.log(\"Email sent successfully!\");\n//           } catch (error) {\n//             console.error(\"Error sending email:\", error);\n//             if(error.response && error.response.data && error.response.data.error){\n//                 console.error(\"Server error message:\", error.response.data.error);\n//             }\n//           }\n//         };\n//         sendEmail();\n//         setIsRunning(false);\n//         navigate(\"/user-photos\"); // Stop the timer\n//       }\n//     }\n//     return () => clearInterval(interval);\n//   }, [isRunning, time,navigate]);\n//   useEffect(() => {\n//     if (initialTime > 0) { // Only reset if initialTime is greater than 0\n//         setTime(initialTime);\n//         setIsRunning(true);\n//     }\n// }, [initialTime]);\n\n//   const formatTime = (seconds) => {\n//     const years = Math.floor(seconds / 31536000);\n//     const months = Math.floor((seconds % 31536000) / 2592000);\n//     const days = Math.floor((seconds % 2592000) / 86400);\n//     const hours = Math.floor((seconds % 86400) / 3600);\n//     const minutes = Math.floor((seconds % 3600) / 60);\n//     const remainingSeconds = seconds % 60;\n\n//     if (years > 0) return `${years}y ${months}m`;\n//     if (months > 0) return `${months}m ${days}d`;\n//     if (days > 0) return `${days}d ${hours}h`;\n//     if (hours > 0) return `${hours}h ${minutes}m`;\n//     return `${minutes}m ${remainingSeconds}s`;\n//   };\n\n//   /*const handleStart = () => {\n//     const seconds = parseInt(inputTime, 10);\n//     if (!isNaN(seconds) && seconds > 0) {\n//       setTime(seconds);\n//       setIsRunning(true);\n//     }\n//   };*/\n\n//   return (\n//     <div className={isDarkMode ? \"dark-mode\" : \"light-mode\"}>\n//         <div className=\"timer\">{formatTime(time)}</div>\n//         <div className=\"button-container\">\n//             <button onClick={() => setIsRunning(false)} className=\"button\">\n//                 Stop\n//             </button>\n//             <button\n//                 onClick={() => {\n//                     setTime(initialTime); // Reset to initialTime\n//                     setIsRunning(true);\n//                 }}\n//                 className=\"button\"\n//             >\n//                 Reset\n//             </button>\n//         </div>\n//     </div>\n// );\n// }\n\n\n\n\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./CountdownTimer.css\";\n\nexport default function CountdownTimer() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const initialTime = parseInt(queryParams.get(\"time\"), 10) || 0; // Read time from URL\n\n    const [time, setTime] = useState(initialTime);\n    const [isRunning, setIsRunning] = useState(true);\n\n    useEffect(() => {\n        let interval;\n        if (isRunning && time > 0) {\n            interval = setInterval(() => {\n                setTime((prevTime) => prevTime - 1);\n            }, 1000);\n        } else {\n            clearInterval(interval);\n            if (isRunning && time === 0) {\n                sendEmail();\n                setIsRunning(false);\n                navigate(\"/user-photos\"); // Redirect when timer ends\n            }\n        }\n        return () => clearInterval(interval);\n    }, [isRunning, time, navigate]);\n\n    const sendEmail = async () => {\n        try {\n            const token = localStorage.getItem(\"token\");\n            await axios.post(\n                \"http://localhost:5000/api/email/send-email\",\n                {},\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                }\n            );\n            console.log(\"Email sent successfully!\");\n        } catch (error) {\n            console.error(\"Error sending email:\", error);\n        }\n    };\n\n    return (\n        <div className=\"timer-container\">\n            <div className=\"timer\">{time}s</div>\n            <button onClick={() => setIsRunning(false)}>Stop</button>\n            <button onClick={() => { setTime(initialTime); setIsRunning(true); }}>Reset</button>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}