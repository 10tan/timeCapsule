{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function FileUploader() {\n//     const [files, setFiles] = useState([]);\n//     const [time, setTime] = useState(0);\n//     const [profileInput, setProfileInput] = useState(\"\");  // State to store profile input\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const storedInput = localStorage.getItem(\"profileInput\");\n//         if (storedInput) {\n//             setProfileInput(storedInput); // Retrieve the input on mount\n//         }\n//     }, []);\n\n//     const handleFileChange = (event) => {\n//         const selectedFiles = Array.from(event.target.files);\n//         if (!selectedFiles.length) return;\n//         setFiles(selectedFiles);\n//     };\n\n//     const handleTimeChange = (event) => {\n//         setTime(parseInt(event.target.value, 10) || 0);\n//     };\n\n//     const handleUpload = async (event) => {\n//         event.preventDefault();\n//         if (!files.length) return;\n\n//         for (const file of files) {\n//             const formData = new FormData();\n//             formData.append(\"image\", file);\n//             formData.append(\"time\", time);\n//             formData.append(\"profileInput\", profileInput); // Send profile input to the backend\n\n//             try {\n//                 await axios.post(\n//                     \"http://localhost:5000/api/img\",\n//                     formData,\n//                     {\n//                         headers: {\n//                             \"Content-Type\": \"multipart/form-data\",\n//                             Authorization: `Bearer ${\n//                                 typeof window !== \"undefined\" && localStorage.getItem(\"token\")\n//                             }`,\n//                         },\n//                     }\n//                 );\n\n//                 console.log(\"Upload successful\");\n//                 navigate(`/dashboard?time=${time}`);\n//             } catch (error) {\n//                 console.error(\"Upload failed:\", error);\n//             }\n//         }\n\n//         setFiles([]);\n//         document.querySelector(\"input[type=file]\").value = \"\";\n//         setTime(0);\n//     };\n\n//     return (\n//         <div className=\"container mt-5\">\n//             <div className=\"card p-4 shadow-lg\">\n//                 <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n\n//                 {/* Display stored input at the top */}\n//                 {profileInput && (\n//                     <div className=\"alert alert-info text-center\">\n//                         Profile Input: <strong>{profileInput}</strong>\n//                     </div>\n//                 )}\n\n//                 <input\n//                     type=\"file\"\n//                     className=\"form-control mb-3\"\n//                     accept=\"image/*, video/*\"\n//                     multiple\n//                     onChange={handleFileChange}\n//                 />\n//                 <input\n//                     type=\"number\"\n//                     className=\"form-control mb-3\"\n//                     placeholder=\"Time (seconds)\"\n//                     value={time}\n//                     onChange={handleTimeChange}\n//                 />\n//                 <button className=\"btn btn-primary\" onClick={handleUpload}>\n//                     Upload & Go to Dashboard\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// import React, { useState, useEffect } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import axios from \"axios\";\n\n// export default function FileUploader() {\n//     const [files, setFiles] = useState([]);\n//     const [previews, setPreviews] = useState([]);\n//     const [glow, setGlow] = useState(false);\n//     const [shake, setShake] = useState(false);\n//     const [showForm, setShowForm] = useState(false);\n//     const [showAddMore, setShowAddMore] = useState(false);\n//     const [uploadCount, setUploadCount] = useState(0);\n//     const [profileTitle, setProfileTitle] = useState(\"Default Title\"); // Fetch this dynamically in real usage\n\n//     useEffect(() => {\n//         if (glow) setTimeout(() => setGlow(false), 1000);\n//         if (shake) setTimeout(() => setShake(false), 500);\n//     }, [glow, shake]);\n\n//     const handleFileChange = (event) => {\n//         const selectedFiles = Array.from(event.target.files);\n//         if (!selectedFiles.length) return;\n\n//         setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n//         setPreviews((prevPreviews) => [...prevPreviews, ...selectedFiles.map(file => URL.createObjectURL(file))]);\n//     };\n\n//     const handleUploadClick = () => {\n//         if (!files.length) {\n//             setGlow(true);\n//             return;\n//         }\n//         setUploadCount(prevCount => {\n//             const newCount = prevCount + 1;\n//             if (newCount > 1) {\n//                 setShake(true);\n//             }\n//             return newCount;\n//         });\n//         setShowForm(true);\n//         setShowAddMore(true);\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n\n//         for (const file of files) {\n//             const formData = new FormData();\n//             formData.append(\"image\", file);\n\n//             try {\n//                 await axios.post(\"http://localhost:5000/api/img\", formData, {\n//                     headers: {\n//                         \"Content-Type\": \"multipart/form-data\",\n//                         Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//                     },\n//                 });\n//                 console.log(\"Upload successful\");\n//             } catch (error) {\n//                 console.error(\"Upload failed:\", error);\n//             }\n//         }\n//         setFiles([]);\n//         setPreviews([]);\n//         setShowForm(false);\n//         setShowAddMore(false);\n//     };\n\n//     return (\n//         <div className=\"container mt-5\">\n//             <style>{`\n//                 .glow { box-shadow: 0 0 15px #00f !important; transition: 0.5s; }\n//                 .shake { animation: shake 0.5s ease-in-out; background: rgba(255, 0, 0, 0.2); }\n//                 @keyframes shake {\n//                     0%, 100% { transform: translateX(0); }\n//                     20%, 80% { transform: translateX(-5px); }\n//                     40%, 60% { transform: translateX(5px); }\n//                 }\n//             `}</style>\n\n//             <div className=\"card p-4 shadow-lg\">\n//                 <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n//                 <input\n//                     type=\"file\"\n//                     className={`form-control mb-3 ${glow ? \"glow\" : \"\"}`}\n//                     accept=\"image/*, video/*\"\n//                     multiple\n//                     onChange={handleFileChange}\n//                 />\n//                 <div className=\"preview-container d-flex flex-wrap\">\n//                     {previews.map((src, index) => (\n//                         <img key={index} src={src} alt=\"Preview\" className=\"m-2\" style={{ width: 100, height: 100, objectFit: \"cover\" }} />\n//                     ))}\n//                 </div>\n//                 <div className=\"d-flex mt-3\">\n//                     <button className=\"btn btn-primary me-2\" onClick={handleUploadClick}>Upload Files</button>\n//                     {showAddMore && <button className=\"btn btn-primary\" onClick={() => document.getElementById(\"fileInput\").click()}>Add More</button>}\n//                 </div>\n//             </div>\n\n//             <input type=\"file\" id=\"fileInput\" className=\"d-none\" accept=\"image/*, video/*\" multiple onChange={handleFileChange} />\n\n//             {showForm && (\n//                 <div className={`card p-4 mt-4 shadow-lg ${shake ? \"shake\" : \"\"}`}>\n//                     <h4 className=\"text-center mb-3\">Confirm Upload</h4>\n//                     <form onSubmit={handleSubmit}>\n//                         <div className=\"mb-3\">\n//                             <label className=\"form-label\">Enter a title:</label>\n//                             <input type=\"text\" className=\"form-control\" value={profileTitle} required readOnly />\n//                         </div>\n//                         <div className=\"mb-3\">\n//                             <label className=\"form-label\">Description:</label>\n//                             <textarea className=\"form-control\" rows=\"3\" required></textarea>\n//                         </div>\n//                         <button type=\"submit\" className=\"btn btn-success\">Submit Upload</button>\n//                     </form>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["/home/tanmay-kumar/Desktop/clone-2/TimeCapsule2.0/frontend/src/Dashboard/FileUploader.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function FileUploader() {\n//     const [files, setFiles] = useState([]);\n//     const [time, setTime] = useState(0);\n//     const [profileInput, setProfileInput] = useState(\"\");  // State to store profile input\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const storedInput = localStorage.getItem(\"profileInput\");\n//         if (storedInput) {\n//             setProfileInput(storedInput); // Retrieve the input on mount\n//         }\n//     }, []);\n\n//     const handleFileChange = (event) => {\n//         const selectedFiles = Array.from(event.target.files);\n//         if (!selectedFiles.length) return;\n//         setFiles(selectedFiles);\n//     };\n\n//     const handleTimeChange = (event) => {\n//         setTime(parseInt(event.target.value, 10) || 0);\n//     };\n\n//     const handleUpload = async (event) => {\n//         event.preventDefault();\n//         if (!files.length) return;\n\n//         for (const file of files) {\n//             const formData = new FormData();\n//             formData.append(\"image\", file);\n//             formData.append(\"time\", time);\n//             formData.append(\"profileInput\", profileInput); // Send profile input to the backend\n\n//             try {\n//                 await axios.post(\n//                     \"http://localhost:5000/api/img\",\n//                     formData,\n//                     {\n//                         headers: {\n//                             \"Content-Type\": \"multipart/form-data\",\n//                             Authorization: `Bearer ${\n//                                 typeof window !== \"undefined\" && localStorage.getItem(\"token\")\n//                             }`,\n//                         },\n//                     }\n//                 );\n\n//                 console.log(\"Upload successful\");\n//                 navigate(`/dashboard?time=${time}`);\n//             } catch (error) {\n//                 console.error(\"Upload failed:\", error);\n//             }\n//         }\n\n//         setFiles([]);\n//         document.querySelector(\"input[type=file]\").value = \"\";\n//         setTime(0);\n//     };\n\n//     return (\n//         <div className=\"container mt-5\">\n//             <div className=\"card p-4 shadow-lg\">\n//                 <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n\n//                 {/* Display stored input at the top */}\n//                 {profileInput && (\n//                     <div className=\"alert alert-info text-center\">\n//                         Profile Input: <strong>{profileInput}</strong>\n//                     </div>\n//                 )}\n\n//                 <input\n//                     type=\"file\"\n//                     className=\"form-control mb-3\"\n//                     accept=\"image/*, video/*\"\n//                     multiple\n//                     onChange={handleFileChange}\n//                 />\n//                 <input\n//                     type=\"number\"\n//                     className=\"form-control mb-3\"\n//                     placeholder=\"Time (seconds)\"\n//                     value={time}\n//                     onChange={handleTimeChange}\n//                 />\n//                 <button className=\"btn btn-primary\" onClick={handleUpload}>\n//                     Upload & Go to Dashboard\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import axios from \"axios\";\n\n// export default function FileUploader() {\n//     const [files, setFiles] = useState([]);\n//     const [previews, setPreviews] = useState([]);\n//     const [glow, setGlow] = useState(false);\n//     const [shake, setShake] = useState(false);\n//     const [showForm, setShowForm] = useState(false);\n//     const [showAddMore, setShowAddMore] = useState(false);\n//     const [uploadCount, setUploadCount] = useState(0);\n//     const [profileTitle, setProfileTitle] = useState(\"Default Title\"); // Fetch this dynamically in real usage\n\n//     useEffect(() => {\n//         if (glow) setTimeout(() => setGlow(false), 1000);\n//         if (shake) setTimeout(() => setShake(false), 500);\n//     }, [glow, shake]);\n\n//     const handleFileChange = (event) => {\n//         const selectedFiles = Array.from(event.target.files);\n//         if (!selectedFiles.length) return;\n\n//         setFiles((prevFiles) => [...prevFiles, ...selectedFiles]);\n//         setPreviews((prevPreviews) => [...prevPreviews, ...selectedFiles.map(file => URL.createObjectURL(file))]);\n//     };\n\n//     const handleUploadClick = () => {\n//         if (!files.length) {\n//             setGlow(true);\n//             return;\n//         }\n//         setUploadCount(prevCount => {\n//             const newCount = prevCount + 1;\n//             if (newCount > 1) {\n//                 setShake(true);\n//             }\n//             return newCount;\n//         });\n//         setShowForm(true);\n//         setShowAddMore(true);\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n\n//         for (const file of files) {\n//             const formData = new FormData();\n//             formData.append(\"image\", file);\n\n//             try {\n//                 await axios.post(\"http://localhost:5000/api/img\", formData, {\n//                     headers: {\n//                         \"Content-Type\": \"multipart/form-data\",\n//                         Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//                     },\n//                 });\n//                 console.log(\"Upload successful\");\n//             } catch (error) {\n//                 console.error(\"Upload failed:\", error);\n//             }\n//         }\n//         setFiles([]);\n//         setPreviews([]);\n//         setShowForm(false);\n//         setShowAddMore(false);\n//     };\n\n//     return (\n//         <div className=\"container mt-5\">\n//             <style>{`\n//                 .glow { box-shadow: 0 0 15px #00f !important; transition: 0.5s; }\n//                 .shake { animation: shake 0.5s ease-in-out; background: rgba(255, 0, 0, 0.2); }\n//                 @keyframes shake {\n//                     0%, 100% { transform: translateX(0); }\n//                     20%, 80% { transform: translateX(-5px); }\n//                     40%, 60% { transform: translateX(5px); }\n//                 }\n//             `}</style>\n            \n//             <div className=\"card p-4 shadow-lg\">\n//                 <h2 className=\"text-center mb-4\">Upload Images & Videos</h2>\n//                 <input\n//                     type=\"file\"\n//                     className={`form-control mb-3 ${glow ? \"glow\" : \"\"}`}\n//                     accept=\"image/*, video/*\"\n//                     multiple\n//                     onChange={handleFileChange}\n//                 />\n//                 <div className=\"preview-container d-flex flex-wrap\">\n//                     {previews.map((src, index) => (\n//                         <img key={index} src={src} alt=\"Preview\" className=\"m-2\" style={{ width: 100, height: 100, objectFit: \"cover\" }} />\n//                     ))}\n//                 </div>\n//                 <div className=\"d-flex mt-3\">\n//                     <button className=\"btn btn-primary me-2\" onClick={handleUploadClick}>Upload Files</button>\n//                     {showAddMore && <button className=\"btn btn-primary\" onClick={() => document.getElementById(\"fileInput\").click()}>Add More</button>}\n//                 </div>\n//             </div>\n\n//             <input type=\"file\" id=\"fileInput\" className=\"d-none\" accept=\"image/*, video/*\" multiple onChange={handleFileChange} />\n\n//             {showForm && (\n//                 <div className={`card p-4 mt-4 shadow-lg ${shake ? \"shake\" : \"\"}`}>\n//                     <h4 className=\"text-center mb-3\">Confirm Upload</h4>\n//                     <form onSubmit={handleSubmit}>\n//                         <div className=\"mb-3\">\n//                             <label className=\"form-label\">Enter a title:</label>\n//                             <input type=\"text\" className=\"form-control\" value={profileTitle} required readOnly />\n//                         </div>\n//                         <div className=\"mb-3\">\n//                             <label className=\"form-label\">Description:</label>\n//                             <textarea className=\"form-control\" rows=\"3\" required></textarea>\n//                         </div>\n//                         <button type=\"submit\" className=\"btn btn-success\">Submit Upload</button>\n//                     </form>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}