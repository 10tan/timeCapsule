{"ast":null,"code":"var _jsxFileName = \"/home/tanmay-kumar/Desktop/clone-2/timeCapsule/src/Dashboard/user-photos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPhotos() {\n  _s();\n  const [imgurl, setImgurl] = useState([]); // Initialize as an empty array\n\n  useEffect(() => {\n    const fetchImgurl = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:5000/api/ph/photos\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setImgurl(response.data.imgurl); // Store the array of URLs\n      } catch (error) {\n        console.error(\"Error fetching imgurl:\", error);\n      }\n    };\n    fetchImgurl();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), imgurl.length > 0 ?\n    /*#__PURE__*/\n    // Check if imgurl array has items\n    _jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: imgurl.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: `User Photo ${index}`,\n        style: {\n          maxWidth: \"300px\",\n          margin: \"10px\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No photos found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPhotos, \"hDG920MDB54HHSMjMlMol5d9ShQ=\");\n_c = UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserPhotos","_s","imgurl","setImgurl","fetchImgurl","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","display","flexWrap","map","url","index","src","alt","maxWidth","margin","_c","$RefreshReg$"],"sources":["/home/tanmay-kumar/Desktop/clone-2/timeCapsule/src/Dashboard/user-photos.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function UserPhotos() {\n  const [imgurl, setImgurl] = useState([]); // Initialize as an empty array\n\n  useEffect(() => {\n    const fetchImgurl = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:5000/api/ph/photos\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setImgurl(response.data.imgurl); // Store the array of URLs\n      } catch (error) {\n        console.error(\"Error fetching imgurl:\", error);\n      }\n    };\n    fetchImgurl();\n  }, []);\n\n  return (\n    <div>\n      <h2>Your Photos</h2>\n      {imgurl.length > 0 ? ( // Check if imgurl array has items\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {imgurl.map((url, index) => (\n            <img\n              key={index}\n              src={url}\n              alt={`User Photo ${index}`}\n              style={{ maxWidth: \"300px\", margin: \"10px\" }}\n            />\n          ))}\n        </div>\n      ) : (\n        <p>No photos found.</p>\n      )}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,qCAAqC,EAAE;UACtEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACFF,SAAS,CAACK,QAAQ,CAACI,IAAI,CAACV,MAAM,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACDT,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBjB,MAAM,CAACkB,MAAM,GAAG,CAAC;IAAA;IAAK;IACrBrB,OAAA;MAAKsB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAR,QAAA,EAC/Cb,MAAM,CAACsB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrB3B,OAAA;QAEE4B,GAAG,EAAEF,GAAI;QACTG,GAAG,EAAE,cAAcF,KAAK,EAAG;QAC3BL,KAAK,EAAE;UAAEQ,QAAQ,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAO;MAAE,GAHxCJ,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENpB,OAAA;MAAAgB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CAvCuBD,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}